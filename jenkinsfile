pipeline {
    agent any
    
    environment {
        LABS = credentials('lab')
        JAVA_HOME = '/opt/bitnami/java' // Set JAVA_HOME
        PATH = "${env.JAVA_HOME}/bin:${env.PATH}" // Add Java to PATH
    }
    
    stages {
        stage('Install Dependencies (System)') {
            steps {
                script {
                    // Install python3-venv package if not installed
                    sh '''
                    if ! dpkg -s python3-venv >/dev/null 2>&1; then
                        echo "Installing python3-venv package..."
                        sudo apt-get update && sudo apt-get install -y python3-venv
                    else
                        echo "python3-venv already installed."
                    fi
                    '''
                }
            }
        }

        stage('Setup Virtual Environment') {
            steps {
                script {
                    // Remove existing virtual environment if it exists
                    sh 'rm -rf retail_pipeline_venv'

                    // Create a new virtual environment
                    sh 'python3 -m venv retail_pipeline_venv'

                    // Upgrade pip and install pipenv
                    sh './retail_pipeline_venv/bin/pip install --upgrade pip'
                    sh './retail_pipeline_venv/bin/pip install pipenv'
                }
            }
        }
        
        stage('Install Project Dependencies') {
            steps {
                script {
                    // Install dependencies using Pipenv
                    sh './retail_pipeline_venv/bin/pipenv install'
                }
            }
        }
        
        stage('Run Tests') {
            steps {
                script {
                    // Ensure JAVA_HOME is set correctly
                    sh 'echo $JAVA_HOME'
                    sh 'echo $PATH'

                    // Run tests using pytest
                    sh './retail_pipeline_venv/bin/pipenv run pytest'
                }
            }
        }
        
        stage('Package Application') {
            steps {
                script {
                    // Create zip file but exclude the virtual environment
                    sh 'zip -r retailproject.zip . -x "retail_pipeline_venv/*"'
                }
            }
        }
        
        stage('Deploy to Server') {
            steps {
                script {
                    // Deploy using SCP
                    sh '''
                    sshpass -p "$LABS_PSW" scp -o StrictHostKeyChecking=no -r \
                    retailproject.zip "$LABS_USR"@g02.itversity.com:/home/itv012419/retailproject
                    '''
                }
            }
        }
    }
}
